plugins {
	id "java";
	id "java-library";
	id "signing";
	id "maven-publish";
}

ext.moduleName = "jp.empressia.enterprise.ws.jersey.jsonp";
// ext.local_network_repository_url;
// ext.version;

repositories {
	mavenCentral();
}

dependencies {
	// use Empressia WebService.
	api(group:"jp.empressia", name:"jp.empressia.enterprise.ws", version:"1.1.2");
	// use JAX-RS.
	implementation(group:"javax.ws.rs", name:"javax.ws.rs-api", version:"2.1.1");
	// use Jersey.
	implementation(group:"org.glassfish.jersey.core", name:"jersey-server", version:"2.29.1");
	// use JSON Processing.
	implementation(group:"javax.json", name:"javax.json-api", version:"1.1.4");
}

tasks.withType(JavaCompile) {
	options.encoding "UTF-8";
	options.compilerArgs << "-parameters";
}

java {
	withJavadocJar();
	withSourcesJar();
}

jar {
	archiveBaseName = moduleName;
	manifest {
		attributes (
			"Automatic-Module-Name": moduleName
		);
	}
}

javadoc {
	options.charSet "UTF-8";
	options.encoding "UTF-8";
	options.addBooleanOption("html5", true);
	options.addStringOption("Xdoclint:none", "-quiet");
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = "jp.empressia";
			artifactId = moduleName;
			from components.java;
			// for Maven Central.
			pom {
				name = "EmpressiaWebServiceJerseyJSONProcessing";
				description = "JAX-RS（Jakarta WebService）用のライブラリです。";
				url = "https://github.com/Empressia/EmpressiaWebServie/EmpressiaWebServiceJerseyJSONProcessing";
				licenses {
					license {
						name = "zlib License";
						comments = "If you want to use this with a team (multiple people), select the MIT license.";
					}
					license {
						name = "MIT License";
						comments = "If you want to use this with a team (multiple people), select the MIT license.";
					}
				}
				developers {
					developer {
						// The unique ID of this developer in the SCM.
						id = "Empressia";
					}
				}
				scm {
					connection = "scm:git:https://github.com/Empressia/EmpressiaWebServie.git"
					url = "https://github.com/Empressia/EmpressiaWebServie.git"
				}
			}
		}
	}
	repositories {
		// publishMavenPublicationToLocalNetworkRepository
		maven {
			name = "LocalNetwork";
			url = local_network_repository_url;
		}
		// publishMavenPublicationToMavenCentralRepository
		maven {
			name = "MavenCentral";
			def releasesRepoUrl = sonatype_release_repository_url;
			def snapshotsRepoUrl = sonatype_snapshot_repository_url;
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl;
			credentials {
				username = sonatype_username;
				password = sonatype_password;
			}
		}
	}
}

signing {
	sign publishing.publications.maven;
}
