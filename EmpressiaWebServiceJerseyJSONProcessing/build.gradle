plugins {
	id "java";
	id "maven-publish";
}

ext.moduleName = "jp.empressia.enterprise.ws.jersey.jsonp";
// ext.upload_repository_url;
// ext.version;

repositories {
	jcenter();
}

dependencies {
	// use Empressia WebService.
	implementation(group:"jp.empressia", name:"jp.empressia.enterprise.ws", version:"1.1.0");
	// use JAX-RS.
	implementation(group:"javax.ws.rs", name:"javax.ws.rs-api", version:"2.1.1");
	// use Jersey.
	implementation(group:"org.glassfish.jersey.core", name:"jersey-server", version:"2.29.1");
	// use JSON Processing.
	implementation(group:"javax.json", name:"javax.json-api", version:"1.1.4");
}

tasks.withType(JavaCompile) {
	options.encoding "UTF-8";
	options.compilerArgs << "-parameters";
}

jar {
	archiveBaseName = moduleName;
	manifest {
		attributes (
			"Automatic-Module-Name": moduleName
		);
	}
}

javadoc {
	source = sourceSets.main.allJava;
	options.charSet "UTF-8";
	options.encoding "UTF-8";
	options.addStringOption("Xdoclint:none", "-quiet");
}
task javadocJar(type: Jar) {
	archiveBaseName = jar.archiveBaseName;
	classifier "javadoc";
	from javadoc.destinationDir;
}
javadocJar.dependsOn(tasks.javadoc);
task sourcesJar(type: Jar) {
	archiveBaseName = jar.archiveBaseName;
	classifier "sources";
	from sourceSets.main.allSource;
}
artifacts {
	archives javadocJar;
	archives sourcesJar;
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = "jp.empressia";
			artifactId = moduleName;
			from components.java;
			artifact javadocJar;
			artifact sourcesJar;
		}
	}
	repositories {
		maven {
			url = upload_repository_url;
		}
	}
}
